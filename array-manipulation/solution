#!/usr/bin/env node
'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', inputStdin => {
  inputString += inputStdin;
});

process.stdin.on('end', _ => {
  inputString = inputString
    .replace(/\s*$/, '')
    .split('\n')
    .map(str => str.replace(/\s*$/, ''));

  main();
});

function readLine() {
  return inputString[currentLine++];
}

function arrayManipulation(n, queries) {
  const array = Array(n + 1).fill(0);
  let a, b, k;
  let current = 0;
  let max = 0;

  for (let i = 0; i < queries.length; i++) {
    [a, b, k] = queries[i];
    array[a] += k;
    if (b + 1 <= n) array[b + 1] -= k;
  }

  for (let j = 1; j <= n; j++) {
    current = current + array[j];
    if (max < current) max = current;
  }

  return max;
}

function main() {
  const ws = fs.createWriteStream(process.env.OUTPUT_PATH);
  const nm = readLine().split(' ');
  const n = parseInt(nm[0], 10);
  const m = parseInt(nm[1], 10);
  let queries = Array(m);

  for (let i = 0; i < m; i++) {
    queries[i] = readLine()
      .split(' ')
      .map(queriesTemp => parseInt(queriesTemp, 10));
  }

  let result = arrayManipulation(n, queries);
  ws.write(result + '\n');
  ws.end();
}
